import { createAsyncThunk, createSlice } from '@reduxjs/toolkit';
import { fetchAds } from './advertAPI';

// Initial state
const initialState = {
    data: [],
    status: 'idle',
  };


// Setup Api call as a thunk
export const fetchAdsAsync = createAsyncThunk(
    'counter/fetchAds',
    async () => {
      const response = await fetchAds();
      // The value we return becomes the `fulfilled` action payload
      return response.data;
    }
  );


  export const advertSlice = createSlice({
    name: 'advert',
    initialState,
    // The `reducers` field lets us define reducers and generate associated actions
    reducers: {

    },
    // The `extraReducers` field lets the slice handle actions defined elsewhere,
    // including actions generated by createAsyncThunk or in other slices.
    extraReducers: (builder) => {
      builder
        .addCase(fetchAdsAsync.pending, (state) => {
          state.status = 'loading';
        })
        .addCase(fetchAdsAsync.fulfilled, (state, action) => {
          state.status = 'idle';
          state.data = action.payload;
        });
    },
  });

  // Selectors
  export const selectAdverts = (state) => state.advert.data;


 // Reducers
  export default advertSlice.reducer;
