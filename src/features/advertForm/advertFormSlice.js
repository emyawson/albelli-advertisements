import { createAsyncThunk, createSlice } from '@reduxjs/toolkit';
import { createAdvert } from './advertFormAPI';

// Initial state
const initialState = {
    createdAd: null,
    status: 'idle',
  };


  // Setup Api call
export const postAdvertAsync = createAsyncThunk(
    'counter/createAd',
    async (adData) => {
      const response = await createAdvert(adData);
      // The value we return becomes the `fulfilled` action payload
      return response.data;
    }
  );



  export const createAdvertSlice = createSlice({
    name: 'adForm',
    initialState,
    // The `reducers` field lets us define reducers and generate associated actions
    reducers: {

    },
    // The `extraReducers` field lets the slice handle actions defined elsewhere,
    // including actions generated by createAsyncThunk or in other slices.
    extraReducers: (builder) => {
      builder
        .addCase(postAdvertAsync.pending, (state) => {
          state.status = 'loading';
        })
        .addCase(postAdvertAsync.fulfilled, (state, action) => {
          state.status = 'idle';
          state.createdAd = action.payload;
        });
    },
  });


    // Selectors
    export const selectCreatedAdvert = (state) => state.adForm.createdAd;


     // Reducers
  export default createAdvertSlice.reducer;

